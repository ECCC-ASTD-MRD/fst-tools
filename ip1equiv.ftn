	Logical Function ip1equiv(ip1a,ip1b)
	Implicit none
	Integer *8 ip1a,ip1b
	Integer *8 p_int8, ip8a, ip8b, right31_8, one
	Integer p_inta, p_intb, right31, sbit
	Real pa,pb,errtol
	equivalence (p_inta,pa)	
	equivalence (p_intb,pb)	
	
	errtol = 1.0/(2.0**17)        ! erreur tolelre
	p_int8  = Z'80000000'
	right31 = Z'7FFFFFFF'
	right31_8  = right31
	one = 1
	
	ip8a = ishft(ip1a,-31)     ! kind + bit de signe
	ip8b = ishft(ip1b,-31)     ! kind + bit de signe

C        print *,'Debug+ ip1a,ip1b,ip8a,ip8b',ip1a,ip1b,ip8a,ip8b
	if (ip8a .ne. ip8b) then
	   ip1equiv = .false.
	   return
	endif

	sbit = and(ishft(ip1a,-31),one)
	if (sbit .eq. 1) then
	   p_inta = and(ip1a,right31_8)
	   p_intb = and(ip1b,right31_8)
	else
	   p_inta = p_int8 - and(ip1a,right31_8)
	   p_intb = p_int8 - and(ip1b,right31_8)
	   pa = -pa
	   pb = -pb
	endif
C	print *,'Debug+ sbit=',sbit,' pa=',pa,' pb=',pb
C	write(*,777) pa,pb
 777	format('Debug+ pa=',z16.16,' pb=',z16.16) 
	if (pb .eq. 0.) then
	   if (pa .eq. 0.) then
	      ip1equiv = .true.
	   else
	      ip1equiv = .false.
	   endif
	else
	   if (abs(1- pa/pb) .lt. errtol) then
C	      print *,'Debug+ 1- pa/pb=',abs(1- pa/pb),' errtol=',
C     %                 errtol
	      ip1equiv = .true.
	   else
C	      print *,'Debug+ 1- pa/pb=',abs(1- pa/pb),' errtol=',
C     %                 errtol
	      ip1equiv = .false.
	   endif
	endif
	return
	end

	   
	
	
